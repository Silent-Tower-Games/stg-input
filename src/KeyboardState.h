#pragma once

#include "ButtonState.h"

#define STGINPUT_KEYBOARDSTATE_KEYCODES_LENGTH 240

/**
 * List of keyboard keys.
 */
typedef enum STGInput_KeyboardKeys
{
    STGINPUT_KEYBOARDKEYS_UNKNOWN,
    STGINPUT_KEYBOARDKEYS_RETURN,
    STGINPUT_KEYBOARDKEYS_ESCAPE,
    STGINPUT_KEYBOARDKEYS_BACKSPACE,
    STGINPUT_KEYBOARDKEYS_TAB,
    STGINPUT_KEYBOARDKEYS_SPACE,
    STGINPUT_KEYBOARDKEYS_EXCLAIM,
    STGINPUT_KEYBOARDKEYS_QUOTEDBL,
    STGINPUT_KEYBOARDKEYS_HASH,
    STGINPUT_KEYBOARDKEYS_PERCENT,
    STGINPUT_KEYBOARDKEYS_DOLLAR,
    STGINPUT_KEYBOARDKEYS_AMPERSAND,
    STGINPUT_KEYBOARDKEYS_QUOTE,
    STGINPUT_KEYBOARDKEYS_LEFTPAREN,
    STGINPUT_KEYBOARDKEYS_RIGHTPAREN,
    STGINPUT_KEYBOARDKEYS_ASTERISK,
    STGINPUT_KEYBOARDKEYS_PLUS,
    STGINPUT_KEYBOARDKEYS_COMMA,
    STGINPUT_KEYBOARDKEYS_MINUS,
    STGINPUT_KEYBOARDKEYS_PERIOD,
    STGINPUT_KEYBOARDKEYS_SLASH,
    STGINPUT_KEYBOARDKEYS_0,
    STGINPUT_KEYBOARDKEYS_1,
    STGINPUT_KEYBOARDKEYS_2,
    STGINPUT_KEYBOARDKEYS_3,
    STGINPUT_KEYBOARDKEYS_4,
    STGINPUT_KEYBOARDKEYS_5,
    STGINPUT_KEYBOARDKEYS_6,
    STGINPUT_KEYBOARDKEYS_7,
    STGINPUT_KEYBOARDKEYS_8,
    STGINPUT_KEYBOARDKEYS_9,
    STGINPUT_KEYBOARDKEYS_COLON,
    STGINPUT_KEYBOARDKEYS_SEMICOLON,
    STGINPUT_KEYBOARDKEYS_LESS,
    STGINPUT_KEYBOARDKEYS_EQUALS,
    STGINPUT_KEYBOARDKEYS_GREATER,
    STGINPUT_KEYBOARDKEYS_QUESTION,
    STGINPUT_KEYBOARDKEYS_AT,
    STGINPUT_KEYBOARDKEYS_LEFTBRACKET,
    STGINPUT_KEYBOARDKEYS_BACKSLASH,
    STGINPUT_KEYBOARDKEYS_RIGHTBRACKET,
    STGINPUT_KEYBOARDKEYS_CARET,
    STGINPUT_KEYBOARDKEYS_UNDERSCORE,
    STGINPUT_KEYBOARDKEYS_BACKQUOTE,
    STGINPUT_KEYBOARDKEYS_a,
    STGINPUT_KEYBOARDKEYS_b,
    STGINPUT_KEYBOARDKEYS_c,
    STGINPUT_KEYBOARDKEYS_d,
    STGINPUT_KEYBOARDKEYS_e,
    STGINPUT_KEYBOARDKEYS_f,
    STGINPUT_KEYBOARDKEYS_g,
    STGINPUT_KEYBOARDKEYS_h,
    STGINPUT_KEYBOARDKEYS_i,
    STGINPUT_KEYBOARDKEYS_j,
    STGINPUT_KEYBOARDKEYS_k,
    STGINPUT_KEYBOARDKEYS_l,
    STGINPUT_KEYBOARDKEYS_m,
    STGINPUT_KEYBOARDKEYS_n,
    STGINPUT_KEYBOARDKEYS_o,
    STGINPUT_KEYBOARDKEYS_p,
    STGINPUT_KEYBOARDKEYS_q,
    STGINPUT_KEYBOARDKEYS_r,
    STGINPUT_KEYBOARDKEYS_s,
    STGINPUT_KEYBOARDKEYS_t,
    STGINPUT_KEYBOARDKEYS_u,
    STGINPUT_KEYBOARDKEYS_v,
    STGINPUT_KEYBOARDKEYS_w,
    STGINPUT_KEYBOARDKEYS_x,
    STGINPUT_KEYBOARDKEYS_y,
    STGINPUT_KEYBOARDKEYS_z,
    STGINPUT_KEYBOARDKEYS_CAPSLOCK,
    STGINPUT_KEYBOARDKEYS_F1,
    STGINPUT_KEYBOARDKEYS_F2,
    STGINPUT_KEYBOARDKEYS_F3,
    STGINPUT_KEYBOARDKEYS_F4,
    STGINPUT_KEYBOARDKEYS_F5,
    STGINPUT_KEYBOARDKEYS_F6,
    STGINPUT_KEYBOARDKEYS_F7,
    STGINPUT_KEYBOARDKEYS_F8,
    STGINPUT_KEYBOARDKEYS_F9,
    STGINPUT_KEYBOARDKEYS_F10,
    STGINPUT_KEYBOARDKEYS_F11,
    STGINPUT_KEYBOARDKEYS_F12,
    STGINPUT_KEYBOARDKEYS_PRINTSCREEN,
    STGINPUT_KEYBOARDKEYS_SCROLLLOCK,
    STGINPUT_KEYBOARDKEYS_PAUSE,
    STGINPUT_KEYBOARDKEYS_INSERT,
    STGINPUT_KEYBOARDKEYS_HOME,
    STGINPUT_KEYBOARDKEYS_PAGEUP,
    STGINPUT_KEYBOARDKEYS_DELETE,
    STGINPUT_KEYBOARDKEYS_END,
    STGINPUT_KEYBOARDKEYS_PAGEDOWN,
    STGINPUT_KEYBOARDKEYS_RIGHT,
    STGINPUT_KEYBOARDKEYS_LEFT,
    STGINPUT_KEYBOARDKEYS_DOWN,
    STGINPUT_KEYBOARDKEYS_UP,
    STGINPUT_KEYBOARDKEYS_NUMLOCKCLEAR,
    STGINPUT_KEYBOARDKEYS_KP_DIVIDE,
    STGINPUT_KEYBOARDKEYS_KP_MULTIPLY,
    STGINPUT_KEYBOARDKEYS_KP_MINUS,
    STGINPUT_KEYBOARDKEYS_KP_PLUS,
    STGINPUT_KEYBOARDKEYS_KP_ENTER,
    STGINPUT_KEYBOARDKEYS_KP_1,
    STGINPUT_KEYBOARDKEYS_KP_2,
    STGINPUT_KEYBOARDKEYS_KP_3,
    STGINPUT_KEYBOARDKEYS_KP_4,
    STGINPUT_KEYBOARDKEYS_KP_5,
    STGINPUT_KEYBOARDKEYS_KP_6,
    STGINPUT_KEYBOARDKEYS_KP_7,
    STGINPUT_KEYBOARDKEYS_KP_8,
    STGINPUT_KEYBOARDKEYS_KP_9,
    STGINPUT_KEYBOARDKEYS_KP_0,
    STGINPUT_KEYBOARDKEYS_KP_PERIOD,
    STGINPUT_KEYBOARDKEYS_APPLICATION,
    STGINPUT_KEYBOARDKEYS_POWER,
    STGINPUT_KEYBOARDKEYS_KP_EQUALS,
    STGINPUT_KEYBOARDKEYS_F13,
    STGINPUT_KEYBOARDKEYS_F14,
    STGINPUT_KEYBOARDKEYS_F15,
    STGINPUT_KEYBOARDKEYS_F16,
    STGINPUT_KEYBOARDKEYS_F17,
    STGINPUT_KEYBOARDKEYS_F18,
    STGINPUT_KEYBOARDKEYS_F19,
    STGINPUT_KEYBOARDKEYS_F20,
    STGINPUT_KEYBOARDKEYS_F21,
    STGINPUT_KEYBOARDKEYS_F22,
    STGINPUT_KEYBOARDKEYS_F23,
    STGINPUT_KEYBOARDKEYS_F24,
    STGINPUT_KEYBOARDKEYS_EXECUTE,
    STGINPUT_KEYBOARDKEYS_HELP,
    STGINPUT_KEYBOARDKEYS_MENU,
    STGINPUT_KEYBOARDKEYS_SELECT,
    STGINPUT_KEYBOARDKEYS_STOP,
    STGINPUT_KEYBOARDKEYS_AGAIN,
    STGINPUT_KEYBOARDKEYS_UNDO,
    STGINPUT_KEYBOARDKEYS_CUT,
    STGINPUT_KEYBOARDKEYS_COPY,
    STGINPUT_KEYBOARDKEYS_PASTE,
    STGINPUT_KEYBOARDKEYS_FIND,
    STGINPUT_KEYBOARDKEYS_MUTE,
    STGINPUT_KEYBOARDKEYS_VOLUMEUP,
    STGINPUT_KEYBOARDKEYS_VOLUMEDOWN,
    STGINPUT_KEYBOARDKEYS_KP_COMMA,
    STGINPUT_KEYBOARDKEYS_KP_EQUALSAS400,
    STGINPUT_KEYBOARDKEYS_ALTERASE,
    STGINPUT_KEYBOARDKEYS_SYSREQ,
    STGINPUT_KEYBOARDKEYS_CANCEL,
    STGINPUT_KEYBOARDKEYS_CLEAR,
    STGINPUT_KEYBOARDKEYS_PRIOR,
    STGINPUT_KEYBOARDKEYS_RETURN2,
    STGINPUT_KEYBOARDKEYS_SEPARATOR,
    STGINPUT_KEYBOARDKEYS_OUT,
    STGINPUT_KEYBOARDKEYS_OPER,
    STGINPUT_KEYBOARDKEYS_CLEARAGAIN,
    STGINPUT_KEYBOARDKEYS_CRSEL,
    STGINPUT_KEYBOARDKEYS_EXSEL,
    STGINPUT_KEYBOARDKEYS_KP_00,
    STGINPUT_KEYBOARDKEYS_KP_000,
    STGINPUT_KEYBOARDKEYS_THOUSANDSSEPARATOR,
    STGINPUT_KEYBOARDKEYS_DECIMALSEPARATOR,
    STGINPUT_KEYBOARDKEYS_CURRENCYUNIT,
    STGINPUT_KEYBOARDKEYS_CURRENCYSUBUNIT,
    STGINPUT_KEYBOARDKEYS_KP_LEFTPAREN,
    STGINPUT_KEYBOARDKEYS_KP_RIGHTPAREN,
    STGINPUT_KEYBOARDKEYS_KP_LEFTBRACE,
    STGINPUT_KEYBOARDKEYS_KP_RIGHTBRACE,
    STGINPUT_KEYBOARDKEYS_KP_TAB,
    STGINPUT_KEYBOARDKEYS_KP_BACKSPACE,
    STGINPUT_KEYBOARDKEYS_KP_A,
    STGINPUT_KEYBOARDKEYS_KP_B,
    STGINPUT_KEYBOARDKEYS_KP_C,
    STGINPUT_KEYBOARDKEYS_KP_D,
    STGINPUT_KEYBOARDKEYS_KP_E,
    STGINPUT_KEYBOARDKEYS_KP_F,
    STGINPUT_KEYBOARDKEYS_KP_XOR,
    STGINPUT_KEYBOARDKEYS_KP_POWER,
    STGINPUT_KEYBOARDKEYS_KP_PERCENT,
    STGINPUT_KEYBOARDKEYS_KP_LESS,
    STGINPUT_KEYBOARDKEYS_KP_GREATER,
    STGINPUT_KEYBOARDKEYS_KP_AMPERSAND,
    STGINPUT_KEYBOARDKEYS_KP_DBLAMPERSAND,
    STGINPUT_KEYBOARDKEYS_KP_VERTICALBAR,
    STGINPUT_KEYBOARDKEYS_KP_DBLVERTICALBAR,
    STGINPUT_KEYBOARDKEYS_KP_COLON,
    STGINPUT_KEYBOARDKEYS_KP_HASH,
    STGINPUT_KEYBOARDKEYS_KP_SPACE,
    STGINPUT_KEYBOARDKEYS_KP_AT,
    STGINPUT_KEYBOARDKEYS_KP_EXCLAM,
    STGINPUT_KEYBOARDKEYS_KP_MEMSTORE,
    STGINPUT_KEYBOARDKEYS_KP_MEMRECALL,
    STGINPUT_KEYBOARDKEYS_KP_MEMCLEAR,
    STGINPUT_KEYBOARDKEYS_KP_MEMADD,
    STGINPUT_KEYBOARDKEYS_KP_MEMSUBTRACT,
    STGINPUT_KEYBOARDKEYS_KP_MEMMULTIPLY,
    STGINPUT_KEYBOARDKEYS_KP_MEMDIVIDE,
    STGINPUT_KEYBOARDKEYS_KP_PLUSMINUS,
    STGINPUT_KEYBOARDKEYS_KP_CLEAR,
    STGINPUT_KEYBOARDKEYS_KP_CLEARENTRY,
    STGINPUT_KEYBOARDKEYS_KP_BINARY,
    STGINPUT_KEYBOARDKEYS_KP_OCTAL,
    STGINPUT_KEYBOARDKEYS_KP_DECIMAL,
    STGINPUT_KEYBOARDKEYS_KP_HEXADECIMAL,
    STGINPUT_KEYBOARDKEYS_LCTRL,
    STGINPUT_KEYBOARDKEYS_LSHIFT,
    STGINPUT_KEYBOARDKEYS_LALT,
    STGINPUT_KEYBOARDKEYS_LGUI,
    STGINPUT_KEYBOARDKEYS_RCTRL,
    STGINPUT_KEYBOARDKEYS_RSHIFT,
    STGINPUT_KEYBOARDKEYS_RALT,
    STGINPUT_KEYBOARDKEYS_RGUI,
    STGINPUT_KEYBOARDKEYS_MODE,
    STGINPUT_KEYBOARDKEYS_AUDIONEXT,
    STGINPUT_KEYBOARDKEYS_AUDIOPREV,
    STGINPUT_KEYBOARDKEYS_AUDIOSTOP,
    STGINPUT_KEYBOARDKEYS_AUDIOPLAY,
    STGINPUT_KEYBOARDKEYS_AUDIOMUTE,
    STGINPUT_KEYBOARDKEYS_MEDIASELECT,
    STGINPUT_KEYBOARDKEYS_WWW,
    STGINPUT_KEYBOARDKEYS_MAIL,
    STGINPUT_KEYBOARDKEYS_CALCULATOR,
    STGINPUT_KEYBOARDKEYS_COMPUTER,
    STGINPUT_KEYBOARDKEYS_AC_SEARCH,
    STGINPUT_KEYBOARDKEYS_AC_HOME,
    STGINPUT_KEYBOARDKEYS_AC_BACK,
    STGINPUT_KEYBOARDKEYS_AC_FORWARD,
    STGINPUT_KEYBOARDKEYS_AC_STOP,
    STGINPUT_KEYBOARDKEYS_AC_REFRESH,
    STGINPUT_KEYBOARDKEYS_AC_BOOKMARKS,
    STGINPUT_KEYBOARDKEYS_BRIGHTNESSDOWN,
    STGINPUT_KEYBOARDKEYS_BRIGHTNESSUP,
    STGINPUT_KEYBOARDKEYS_DISPLAYSWITCH,
    STGINPUT_KEYBOARDKEYS_KBDILLUMTOGGLE,
    STGINPUT_KEYBOARDKEYS_KBDILLUMDOWN,
    STGINPUT_KEYBOARDKEYS_KBDILLUMUP,
    STGINPUT_KEYBOARDKEYS_EJECT,
    STGINPUT_KEYBOARDKEYS_SLEEP,
    STGINPUT_KEYBOARDKEYS_APP1,
    STGINPUT_KEYBOARDKEYS_APP2,
    STGINPUT_KEYBOARDKEYS_AUDIOREWIND,
    STGINPUT_KEYBOARDKEYS_AUDIOFASTFORWARD,
} STGInput_KeyboardKeys;

/**
 * Keyboard state object.
 */
typedef struct STGInput_KeyboardState STGInput_KeyboardState;

/**
 * Create a new keyboard state object.
 *
 * \return keyboard state object
 */
STGInput_KeyboardState* STGInput_KeyboardState_Create();

/**
 * Act on an SDL event with a keyboard state object.
 *
 * \param keyboard keyboard state object
 * \param event SDL event
 */
void STGInput_KeyboardState_Event(STGInput_KeyboardState* keyboard, SDL_Event event);

/**
 * Update a keyboard state object's button states.
 * Will change PRESSED to DOWN, RELEASED to UP, etc.
 *
 * \param keyboard keyboard state object
 */
void STGInput_KeyboardState_Update(STGInput_KeyboardState* keyboard);

/**
 * Get the state object of a given keyboard button.
 *
 * \param keyboard keyboard state object
 * \param button button enum value
 * \return button state object
 */
STGInput_ButtonState_Name STGInput_KeyboardState_Button_GetState(STGInput_KeyboardState* keyboard, STGInput_KeyboardKeys key);

/**
 * Get whether the button is down or not.
 * Returns true for PRESSED, DOWN, etc.
 *
 * \param keyboard keyboard state object
 * \param button button enum value
 * \return 1 for down, 0 for otherwise
 */
char STGInput_KeyboardState_Button_IsDown(STGInput_KeyboardState* keyboard, STGInput_KeyboardKeys key);

/**
 * Get whether or not the button is newly pressed this frame.
 *
 * \param keyboard keyboard state object
 * \param button button enum value
 * \return 1 for pressed, 0 otherwise
 */
char STGInput_KeyboardState_Button_IsPressed(STGInput_KeyboardState* keyboard, STGInput_KeyboardKeys key);

/**
 * Get whether or not the button is pressed or repeat-pressed.
 * Repeat-pressed is never true for a gamepad.
 *
 * \param keyboard keyboard state object
 * \param button button enum value
 * \return 1 for pressed / repeat-pressed, 0 otherwise
 */
char STGInput_KeyboardState_Button_IsPressedOrRepeated(STGInput_KeyboardState* keyboard, STGInput_KeyboardKeys key);

/**
 * Get whether or not the button is newly released this frame.
 *
 * \param keyboard keyboard state object
 * \param button button enum value
 * \return 1 for released, 0 otherwise
 */
char STGInput_KeyboardState_Button_IsReleased(STGInput_KeyboardState* keyboard, STGInput_KeyboardKeys key);
